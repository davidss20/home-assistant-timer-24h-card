name: Auto Beta Release

on:
  push:
    branches:
      - beta
  schedule:
    # Build beta every day at 2 AM UTC if there are new commits
    - cron: '0 2 * * *'

jobs:
  check-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for new commits since last beta
        id: check_commits
        run: |
          # Get the latest beta tag
          LATEST_BETA=$(git tag -l "*-beta*" --sort=-version:refname | head -n 1)
          
          if [ -z "$LATEST_BETA" ]; then
            echo "No previous beta found, creating first beta"
            echo "has_new_commits=true" >> $GITHUB_OUTPUT
          else
            # Check if there are commits since the last beta tag
            COMMITS_SINCE=$(git rev-list ${LATEST_BETA}..HEAD --count)
            if [ "$COMMITS_SINCE" -gt 0 ]; then
              echo "Found $COMMITS_SINCE new commits since $LATEST_BETA"
              echo "has_new_commits=true" >> $GITHUB_OUTPUT
            else
              echo "No new commits since $LATEST_BETA"
              echo "has_new_commits=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Create Beta Release
        if: steps.check_commits.outputs.has_new_commits == 'true'
        run: |
          # Create beta version tag
          VERSION="v$(date +'%Y.%m.%d')-beta.$(git rev-parse --short HEAD)"
          
          # Update version in files
          sed -i "s/Version [0-9.]*/Version $VERSION/g" timer-24h-card.js
          
          # Create and push tag
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag $VERSION
          git push origin $VERSION
          
          echo "Created beta version: $VERSION"

      - name: Skip - No new commits
        if: steps.check_commits.outputs.has_new_commits == 'false'
        run: |
          echo "⏭️ Skipping beta release - no new commits since last beta"
