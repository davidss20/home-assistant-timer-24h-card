name: Create Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
      - beta

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine release type
        id: release_type
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            # Tagged release
            VERSION=${GITHUB_REF#refs/tags/}
            if [[ $VERSION == *"-beta"* ]] || [[ $VERSION == *"-alpha"* ]] || [[ $VERSION == *"-rc"* ]]; then
              echo "prerelease=true" >> $GITHUB_OUTPUT
              echo "release_name=Beta Release $VERSION" >> $GITHUB_OUTPUT
            else
              echo "prerelease=false" >> $GITHUB_OUTPUT
              echo "release_name=Release $VERSION" >> $GITHUB_OUTPUT
            fi
            echo "tag_name=$VERSION" >> $GITHUB_OUTPUT
            echo "is_tag=true" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == refs/heads/beta ]]; then
            # Beta branch push
            VERSION="v$(date +'%Y.%m.%d')-beta.$(git rev-parse --short HEAD)"
            echo "prerelease=true" >> $GITHUB_OUTPUT
            echo "release_name=Beta Build $VERSION" >> $GITHUB_OUTPUT
            echo "tag_name=$VERSION" >> $GITHUB_OUTPUT
            echo "is_tag=false" >> $GITHUB_OUTPUT
          else
            # Main branch - development build
            VERSION="v$(date +'%Y.%m.%d')-dev.$(git rev-parse --short HEAD)"
            echo "prerelease=true" >> $GITHUB_OUTPUT
            echo "release_name=Development Build $VERSION" >> $GITHUB_OUTPUT
            echo "tag_name=$VERSION" >> $GITHUB_OUTPUT
            echo "is_tag=false" >> $GITHUB_OUTPUT
          fi

      - name: Update version in files
        run: |
          # Update version in timer-24h-card.js
          sed -i "s/Version [0-9.]*/Version ${{ steps.release_type.outputs.tag_name }}/g" timer-24h-card.js
          
          # Update package.json if exists
          if [ -f package.json ]; then
            sed -i "s/\"version\": \"[^\"]*\"/\"version\": \"${{ steps.release_type.outputs.tag_name }}\"/g" package.json
          fi

      - name: Create ZIP archive
        run: |
          zip -r timer-24h-card-${{ steps.release_type.outputs.tag_name }}.zip \
            timer-24h-card.js \
            timer-24h-card-editor.js \
            hacs.json \
            README.md \
            info.md \
            images/ \
            -x "*.git*" "node_modules/*" "*.log"

      - name: Create/Update Tag (for branch pushes)
        if: steps.release_type.outputs.is_tag == 'false'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -f ${{ steps.release_type.outputs.tag_name }}
          git push -f origin ${{ steps.release_type.outputs.tag_name }}

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_type.outputs.tag_name }}
          release_name: ${{ steps.release_type.outputs.release_name }}
          draft: false
          prerelease: ${{ steps.release_type.outputs.prerelease }}
          body: |
            ## 📦 Timer 24H Card ${{ steps.release_type.outputs.tag_name }}
            
            ### 🔄 Installation Channels:
            
            **🟢 Stable Channel** (Recommended):
            - Only official releases (v1.0.0, v1.1.0, etc.)
            - Thoroughly tested
            - Use main branch
            
            **🟡 Beta Channel**:
            - Pre-release versions (v1.1.0-beta, etc.)
            - Latest features and fixes
            - Use beta branch
            
            **🔴 Development Channel**:
            - Daily builds from main branch
            - Latest commits, may be unstable
            - For testing only
            
            ### 📥 How to Install:
            
            1. **HACS (Recommended)**:
               - Add custom repository: `https://github.com/davidss20/timer-24h-card`
               - Select your preferred channel
            
            2. **Manual Installation**:
               - Download `timer-24h-card-${{ steps.release_type.outputs.tag_name }}.zip`
               - Extract to `config/www/`
               - Add to Lovelace resources
            
            ### 🌟 Features:
            - ⏰ 24-hour visual timer with half-hour precision
            - 🏠 Smart home presence detection
            - ⚡ Automatic entity control
            - 🌍 Multi-language support (English/Hebrew)
            - 📱 Responsive design
            - 🎨 Visual configuration editor
            
            ---
            
            **Channel**: ${{ steps.release_type.outputs.prerelease == 'true' && '🟡 Beta/Dev' || '🟢 Stable' }}
            **Commit**: `${{ github.sha }}`

      - name: Upload ZIP to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./timer-24h-card-${{ steps.release_type.outputs.tag_name }}.zip
          asset_name: timer-24h-card-${{ steps.release_type.outputs.tag_name }}.zip
          asset_content_type: application/zip
